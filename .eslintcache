[{"I:\\練習區\\React hook直播教學\\my-app\\src\\index.js":"1","I:\\練習區\\React hook直播教學\\my-app\\src\\reportWebVitals.js":"2","I:\\練習區\\React hook直播教學\\my-app\\src\\todoList\\App.js":"3","I:\\練習區\\React hook直播教學\\my-app\\src\\todoList\\Header.js":"4","I:\\練習區\\React hook直播教學\\my-app\\src\\todoList\\Footer.js":"5","I:\\練習區\\React hook直播教學\\my-app\\src\\api\\todos.js":"6","I:\\練習區\\React hook直播教學\\my-app\\src\\todoList\\AddToDo.js":"7","I:\\練習區\\React hook直播教學\\my-app\\src\\todoList\\Todos.js":"8","I:\\練習區\\React hook直播教學\\my-app\\src\\todoList\\TaskItem.js":"9","I:\\練習區\\React hook直播教學\\my-app\\src\\todoList\\views\\TodoApp.js":"10","I:\\練習區\\React hook直播教學\\my-app\\src\\todoList\\views\\Login.js":"11","I:\\練習區\\React hook直播教學\\my-app\\src\\todoList\\views\\NotFound.js":"12"},{"size":571,"mtime":1612266062000,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1607866428000,"results":"15","hashOfConfig":"14"},{"size":4990,"mtime":1612450762000,"results":"16","hashOfConfig":"14"},{"size":103,"mtime":1611747578000,"results":"17","hashOfConfig":"14"},{"size":587,"mtime":1612448516000,"results":"18","hashOfConfig":"14"},{"size":1162,"mtime":1612134244000,"results":"19","hashOfConfig":"14"},{"size":1176,"mtime":1612079704000,"results":"20","hashOfConfig":"14"},{"size":393,"mtime":1612133470000,"results":"21","hashOfConfig":"14"},{"size":2624,"mtime":1612223502000,"results":"22","hashOfConfig":"14"},{"size":3114,"mtime":1612448494000,"results":"23","hashOfConfig":"14"},{"size":1148,"mtime":1612450544000,"results":"24","hashOfConfig":"14"},{"size":88,"mtime":1612267280000,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"t3ep6y",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"I:\\練習區\\React hook直播教學\\my-app\\src\\index.js",[],["53","54"],"I:\\練習區\\React hook直播教學\\my-app\\src\\reportWebVitals.js",[],"I:\\練習區\\React hook直播教學\\my-app\\src\\todoList\\App.js",[],"I:\\練習區\\React hook直播教學\\my-app\\src\\todoList\\Header.js",[],"I:\\練習區\\React hook直播教學\\my-app\\src\\todoList\\Footer.js",[],"I:\\練習區\\React hook直播教學\\my-app\\src\\api\\todos.js",[],"I:\\練習區\\React hook直播教學\\my-app\\src\\todoList\\AddToDo.js",[],"I:\\練習區\\React hook直播教學\\my-app\\src\\todoList\\Todos.js",[],"I:\\練習區\\React hook直播教學\\my-app\\src\\todoList\\TaskItem.js",[],"I:\\練習區\\React hook直播教學\\my-app\\src\\todoList\\views\\TodoApp.js",["55","56","57","58","59"],"import {useState,useEffect} from 'react';\r\nimport Header from './../Header';\r\nimport AddToDo from './../AddToDo';\r\nimport Todos from './../Todos';\r\nimport Footer from './../Footer'\r\nimport {v4 as uuidv4} from 'uuid';\r\nimport { getTodos,createTodo, updateTodo, deleteTodo } from './../../api/todos'\r\nimport './../App.css';\r\n \r\nlet defaultTodos=[];\r\nconst TodoApp = ({handleFBLogout}) => {\r\n    let [todos,setTodos] = useState(defaultTodos);//todoList array\r\n    let [inputValue,setInputValue] = useState('');//input欄位的值 \r\n    \r\n    useEffect(()=>{\r\n        fetchData();\r\n    },[]);  \r\n    \r\n    //RESTFUL Api functions\r\n    //Read Data\r\n    const fetchData = async () => {\r\n        defaultTodos = await getTodos();\r\n        setTodos(defaultTodos);\r\n    }\r\n    //新增todo項目\r\n    const handleAddTodo = async() =>{\r\n        if(inputValue.length!== 0){\r\n            try{\r\n                const res = await createTodo({\r\n                    title:inputValue,\r\n                    isDone:false\r\n                });\r\n                setTodos(prevTodos=>[res,...prevTodos]);\r\n            }catch(e){\r\n                console.log(e);\r\n            }\r\n        }\r\n        setInputValue(\"\")\r\n    }\r\n\r\n    //雙向綁定新增工作欄位值\r\n    const handleChange = (e) =>{\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    //顯示編輯input\r\n    const handleIsDone = (payload,callback) => {\r\n        const {id,title,isDone} = payload;//待會檢查是否儲存\r\n        if(callback){//檢查是否為編輯狀態，如為編輯狀態則關閉編輯狀態\r\n            callback();\r\n        }\r\n\r\n        handleSave(payload);\r\n        fetchData();\r\n    }\r\n    \r\n    //刪除todo事項\r\n    const deletTodoItem = async (id) => { \r\n        deleteTodo(id);\r\n        fetchData();\r\n    }\r\n    \r\n    //開啟關閉edit欄位\r\n    const triggerEditColumn = (id,editStatus) =>{\r\n        setTodos(prevTodos=>\r\n            prevTodos.map(todo => {\r\n                if(todo.id!==id)\r\n                    return todo\r\n                else if(todo.id === id && todo.isDone)\r\n                    return {\r\n                        ...todo,\r\n                        isEdit:editStatus,\r\n                        isDone:false\r\n                    }\r\n                else if(todo.id === id)\r\n                    return {\r\n                        ...todo,\r\n                        isEdit:editStatus\r\n                    }\r\n            })\r\n        );\r\n    }\r\n\r\n    //儲存edit變更\r\n    const handleSave = async(payload)=>{\r\n        const {id ,title, isDone} = payload;\r\n        updateTodo({\r\n            id,\r\n            title,\r\n            isDone\r\n        })\r\n        fetchData();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header/>\r\n            <AddToDo handleAddTodo={handleAddTodo} inputValue={inputValue} handleChange={handleChange}/>\r\n            <Todos todos={todos} deletTodoItem = {deletTodoItem} handleIsDone={handleIsDone} handleSave={handleSave} triggerEditColumn={triggerEditColumn}/>\r\n            <Footer things = {todos.length} handleFBLogout={handleFBLogout}/>\r\n        </>\r\n    )\r\n}\r\nexport default TodoApp;","I:\\練習區\\React hook直播教學\\my-app\\src\\todoList\\views\\Login.js",["60"],"import styled from 'styled-components';\r\nimport { Link,useHistory, Redirect } from 'react-router-dom';\r\n\r\n\r\nconst Container = styled.div`\r\n    display:flex;\r\n    flex-wrap:wrap;\r\n    flex-direction:column;\r\n    justify-content:center;\r\n    align-items:center;\r\n`\r\n\r\nconst Title =styled.h1`\r\n    text-align:center;\r\n    font-family:'Noto Sans TC',sans-serif;\r\n    margin: 2rem 0;\r\n`\r\n\r\nconst LoginButton = styled.button`\r\n    background:#1877f2;\r\n    color:white;\r\n    min-width:200px;\r\n    font-size:14px;\r\n    font-weight:bold;\r\n    outline:none;\r\n    border:none;\r\n    font-family:'Noto Sans TC',sans-serif;\r\n    padding:6px 0;\r\n    margin:2rem 0 1rem;\r\n    &:hover{\r\n        background:#385898;\r\n    }\r\n`;\r\n\r\nconst Login =({handleSetPage,goTodos,handleFBLogin,status})=>{\r\n    console.log('status',status);\r\n    if(status==='connected')\r\n        return <Redirect to=\"/todos\"/>\r\n    return (\r\n        <Container>\r\n            <Title>登入 Todo</Title>\r\n            <Link to='/todos'>\r\n                <LoginButton onClick={handleFBLogin}>Facebook 登入</LoginButton>\r\n            </Link>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Login;","I:\\練習區\\React hook直播教學\\my-app\\src\\todoList\\views\\NotFound.js",[],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":6,"column":15,"nodeType":"67","messageId":"68","endLine":6,"endColumn":21},{"ruleId":"65","severity":1,"message":"69","line":48,"column":16,"nodeType":"67","messageId":"68","endLine":48,"endColumn":18},{"ruleId":"65","severity":1,"message":"70","line":48,"column":19,"nodeType":"67","messageId":"68","endLine":48,"endColumn":24},{"ruleId":"65","severity":1,"message":"71","line":48,"column":25,"nodeType":"67","messageId":"68","endLine":48,"endColumn":31},{"ruleId":"72","severity":1,"message":"73","line":66,"column":32,"nodeType":"74","messageId":"75","endLine":66,"endColumn":34},{"ruleId":"65","severity":1,"message":"76","line":2,"column":15,"nodeType":"67","messageId":"68","endLine":2,"endColumn":25},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"no-unused-vars","'uuidv4' is defined but never used.","Identifier","unusedVar","'id' is assigned a value but never used.","'title' is assigned a value but never used.","'isDone' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'useHistory' is defined but never used.","no-global-assign","no-unsafe-negation"]