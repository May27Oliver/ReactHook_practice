{"version":3,"sources":["todoList/Header.js","todoList/AddToDo.js","todoList/TaskItem.js","todoList/Todos.js","todoList/Footer.js","api/todos.js","todoList/views/TodoApp.js","todoList/views/Login.js","todoList/views/NotFound.js","todoList/App.js","reportWebVitals.js","index.js"],"names":["Header","AddToDo","handleAddTodo","inputValue","handleChange","className","clsx","active","length","htmlFor","onKeyPress","e","nativeEvent","keyCode","id","type","onChange","value","placeholder","onClick","TaskItem","pk","deletTodoItem","handleIsDone","todo","triggerEditColumn","handleSave","useState","title","tempTitle","setTempTitle","checkIsDoneCantModify","isEdit","done","isDone","edit","onDoubleClick","focusable","xmlns","width","height","viewBox","fill","fillRule","d","target","onKeyDown","handleKeyDown","Todos","todos","map","item","Container","styled","div","LogoutButton","button","Footer","things","handleFBLogout","baseURL","createTodo","payload","a","fetch","method","headers","body","JSON","stringify","res","json","deleteTodo","updateTodo","defaultTodos","TodoApp","setTodos","setInputValue","useEffect","fetchData","then","prevTodos","console","log","callback","editStatus","Title","h1","LoginButton","Login","handleSetPage","goTodos","handleFBLogin","status","to","NotFound","App","setRes","isAtLogin","useRouteMatch","window","fbAsyncInit","FB","init","appId","cookie","xfbml","version","getLoginStatus","response","AppEvents","logPageView","s","js","fjs","getElementsByTagName","getElementById","createElement","src","parentNode","insertBefore","document","path","exact","logout","login","scope","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.a4d53306.chunk.js","sourcesContent":["const Header = () =>(\r\n    <header>\r\n        <h3>Tasks</h3>\r\n    </header>\r\n)\r\n\r\nexport default Header;","import clsx from 'clsx';\r\n\r\nconst AddToDo = ({handleAddTodo,inputValue,handleChange}) => {\r\n    // useEffect(()=>{\r\n    //     document.getElementById('add-todo-input').addEventListener('keypress',(e)=>{\r\n    //         if(e.keyCode === 13){\r\n    //           handleAddTodo(e);  \r\n    //         }\r\n    //     })\r\n    // },[])\r\n    return (\r\n        <div className={clsx(\"add-todo\",{active:inputValue.length > 0})}>\r\n            <label className=\"add-todo-icon icon\" htmlFor=\"add-todo-input\"></label>\r\n            <div className=\"add-todo-input\" onKeyPress={e=>{\r\n                if(e.nativeEvent.keyCode === 13){\r\n                    handleAddTodo();\r\n                }\r\n            }}>\r\n                <input \r\n                    id=\"add-todo-input\"\r\n                    type=\"text\"\r\n                    onChange={handleChange}\r\n                    value={inputValue}\r\n                    placeholder=\"新增工作\"\r\n                />\r\n            </div>\r\n            <div className=\"add-todo-action\">\r\n                <button className=\"btn-reset btn-add\" onClick={handleAddTodo}> 新增 </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddToDo;","import {useState} from 'react';\r\nimport clsx from 'clsx';\r\n\r\nconst TaskItem = ({pk,deletTodoItem,handleIsDone,todo,triggerEditColumn,handleSave})=>{\r\n    const [tempTitle,setTempTitle] = useState(todo.title);\r\n    //雙向綁定title的即時修正\r\n    const handleEditChange=(e)=>{\r\n        setTempTitle(e.target.value);\r\n    }\r\n\r\n    //因為不希望isDone的項目名稱被修改，所以做個判斷是否再修改狀態的判斷\r\n    const checkIsDoneCantModify = () => {\r\n        if(todo.isEdit){//如果select啟動，代表修改模式正出現，isDone必須關閉修改模式\r\n            triggerEditColumn(todo,false)\r\n        }\r\n    }\r\n    const handleKeyDown= e =>{\r\n        if(e.keyCode=== 13 && tempTitle.length!== 0)\r\n            handleSave({id:todo.id,title:tempTitle,isDone:todo.isDone});\r\n        else if(e.keyCode === 27){\r\n            triggerEditColumn(todo.id,false)\r\n            setTempTitle(todo.title)\r\n        }\r\n    }\r\n    return (\r\n        <div className={clsx(\"task-item\",{done:todo.isDone,edit:todo.isEdit})}>\r\n            {/* task-item 要有done 和 edit兩個判斷 */}\r\n            <div className=\"task-item-checked\">\r\n                <span className=\"icon icon-checked\" onDoubleClick={()=>handleIsDone({id:todo.id,title:todo.title,isDone:todo.isDone?false:true},checkIsDoneCantModify)}>\r\n                {/* icon-check-circle */}\r\n                    <svg focusable=\"false\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\r\n                        <path fill=\"#ff6600\" fillRule=\"evenodd\"\r\n                        d=\"M12 20c-4.411 0-8-3.589-8-8s3.589-8 8-8 8 3.589 8 8-3.589 8-8 8m0-17c-4.963 0-9 4.037-9 9s4.037 9 9 9 9-4.037 9-9-4.037-9-9-9\">\r\n                        </path>\r\n                    </svg>\r\n                </span>\r\n            </div>\r\n        \r\n            <div className=\"task-item-body\">\r\n                <span className=\"task-item-body-text\" onDoubleClick={()=>{\r\n                    triggerEditColumn(todo.id,true)\r\n                }}>{tempTitle}</span>\r\n                <input className=\"task-item-body-input\" type=\"text\" placeholder=\"新增工作\" \r\n                    value={tempTitle} \r\n                    onChange={handleEditChange}\r\n                    onDoubleClick={()=>triggerEditColumn(todo.id,false)}\r\n                    onKeyDown={(e)=>handleKeyDown(e)}\r\n                />\r\n            </div>\r\n            <div className=\"task-item-action\">\r\n                <button className=\"btn-reset btn-destroy icon\" onClick={()=>deletTodoItem(pk)}> </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TaskItem;","import TaskItem from './TaskItem';\r\n\r\nconst Todos = ({todos,deletTodoItem,handleIsDone,triggerEditColumn,handleSave}) =>(\r\n    <div className=\"todos\">\r\n        {todos.map((item)=>(<TaskItem key={item.id} pk={item.id} deletTodoItem={deletTodoItem} handleSave={handleSave} handleIsDone={handleIsDone} todo={item} triggerEditColumn={triggerEditColumn}/>))}\r\n    </div>\r\n)\r\n\r\nexport default Todos;","import styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n    display:flex;\r\n    justify-content:space-between;\r\n`\r\n\r\nconst LogoutButton = styled.button`\r\n    font-size:14px;\r\n    font-weight:400;\r\n    margin:2rem 0 1rem 0;\r\n    &:hover{\r\n        text-decoration:underline;\r\n    }\r\n`\r\n\r\nconst Footer =({things,handleFBLogout})=>(\r\n    <footer>\r\n        <Container>\r\n            <p>剩餘項目: {things}</p>\r\n            <LogoutButton className=\"btn-reset\" onClick={handleFBLogout}>登出</LogoutButton>  \r\n        </Container>\r\n    </footer>\r\n)\r\n\r\nexport default Footer;","const baseURL = 'https://gist.githubusercontent.com/May27Oliver/65cbf1224fc415817434715772da2443/raw/b1fc0afb1934594615f5d22fa2720ec5528f322d/todo.json';\r\n\r\n//READ\r\nexport const getTodos = () =>{\r\n    return fetch(`${baseURL}/info`,{\r\n        method:'GET',\r\n        headers:{\r\n            'Content-Type':'application/json'\r\n        }\r\n    }\r\n    ).then(res =>res.json());\r\n}\r\n//CREATE\r\nexport const createTodo = async (payload) =>{\r\n    const {title,isDone} = payload;\r\n    const res = await fetch(`${baseURL}/info `,{\r\n        method:'POST',\r\n        headers:{\r\n            'Content-Type':'application/json'\r\n        },\r\n        body:JSON.stringify({\r\n            title,\r\n            isDone\r\n        })\r\n    });\r\n    return await res.json();\r\n}\r\n\r\n//DELETE\r\nexport const deleteTodo = async (id) =>{\r\n    const res = await fetch(`${baseURL}/info/${id}`,{\r\n        method:'DELETE',\r\n        headers:{\r\n            'Content-Type':'application/json',\r\n        }\r\n    })\r\n    \r\n    return await res.json();\r\n}\r\n\r\n// UPDATE\r\nexport const updateTodo = async (payload) =>{\r\n    const {id ,title ,isDone} = payload;\r\n    const res = await fetch(`${baseURL}/info/${id}`,{\r\n        method:'PATCH',\r\n        headers:{\r\n            'Content-Type':'application/json',\r\n        },\r\n        body:JSON.stringify({\r\n            title,\r\n            isDone\r\n        })\r\n    })\r\n    return await res.json();\r\n}","import {useState,useEffect} from 'react';\r\nimport Header from './../Header';\r\nimport AddToDo from './../AddToDo';\r\nimport Todos from './../Todos';\r\nimport Footer from './../Footer'\r\nimport {v4 as uuidv4} from 'uuid';\r\nimport { getTodos,createTodo, updateTodo, deleteTodo } from './../../api/todos'\r\nimport './../App.css';\r\n \r\nlet defaultTodos=[];\r\nconst TodoApp = ({handleFBLogout}) => {\r\n    let [todos,setTodos] = useState(defaultTodos);//todoList array\r\n    let [inputValue,setInputValue] = useState('');//input欄位的值 \r\n    \r\n    useEffect(()=>{\r\n        fetchData();\r\n    },[]);  \r\n    \r\n    //RESTFUL Api functions\r\n    //Read Data\r\n    const fetchData = async () => {\r\n        defaultTodos = await getTodos();\r\n        setTodos(defaultTodos);\r\n    }\r\n    //新增todo項目\r\n    const handleAddTodo = async() =>{\r\n        if(inputValue.length!== 0){\r\n            try{\r\n                const res = await createTodo({\r\n                    title:inputValue,\r\n                    isDone:false\r\n                });\r\n                setTodos(prevTodos=>[res,...prevTodos]);\r\n            }catch(e){\r\n                console.log(e);\r\n            }\r\n        }\r\n        setInputValue(\"\")\r\n    }\r\n\r\n    //雙向綁定新增工作欄位值\r\n    const handleChange = (e) =>{\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    //顯示編輯input\r\n    const handleIsDone = (payload,callback) => {\r\n        const {id,title,isDone} = payload;//待會檢查是否儲存\r\n        if(callback){//檢查是否為編輯狀態，如為編輯狀態則關閉編輯狀態\r\n            callback();\r\n        }\r\n\r\n        handleSave(payload);\r\n        fetchData();\r\n    }\r\n    \r\n    //刪除todo事項\r\n    const deletTodoItem = async (id) => { \r\n        deleteTodo(id);\r\n        fetchData();\r\n    }\r\n    \r\n    //開啟關閉edit欄位\r\n    const triggerEditColumn = (id,editStatus) =>{\r\n        setTodos(prevTodos=>\r\n            prevTodos.map(todo => {\r\n                if(todo.id!==id)\r\n                    return todo\r\n                else if(todo.id === id && todo.isDone)\r\n                    return {\r\n                        ...todo,\r\n                        isEdit:editStatus,\r\n                        isDone:false\r\n                    }\r\n                else if(todo.id === id)\r\n                    return {\r\n                        ...todo,\r\n                        isEdit:editStatus\r\n                    }\r\n            })\r\n        );\r\n    }\r\n\r\n    //儲存edit變更\r\n    const handleSave = async(payload)=>{\r\n        const {id ,title, isDone} = payload;\r\n        updateTodo({\r\n            id,\r\n            title,\r\n            isDone\r\n        })\r\n        fetchData();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header/>\r\n            <AddToDo handleAddTodo={handleAddTodo} inputValue={inputValue} handleChange={handleChange}/>\r\n            <Todos todos={todos} deletTodoItem = {deletTodoItem} handleIsDone={handleIsDone} handleSave={handleSave} triggerEditColumn={triggerEditColumn}/>\r\n            <Footer things = {todos.length} handleFBLogout={handleFBLogout}/>\r\n        </>\r\n    )\r\n}\r\nexport default TodoApp;","import styled from 'styled-components';\r\nimport { Link,useHistory, Redirect } from 'react-router-dom';\r\n\r\n\r\nconst Container = styled.div`\r\n    display:flex;\r\n    flex-wrap:wrap;\r\n    flex-direction:column;\r\n    justify-content:center;\r\n    align-items:center;\r\n`\r\n\r\nconst Title =styled.h1`\r\n    text-align:center;\r\n    font-family:'Noto Sans TC',sans-serif;\r\n    margin: 2rem 0;\r\n`\r\n\r\nconst LoginButton = styled.button`\r\n    background:#1877f2;\r\n    color:white;\r\n    min-width:200px;\r\n    font-size:14px;\r\n    font-weight:bold;\r\n    outline:none;\r\n    border:none;\r\n    font-family:'Noto Sans TC',sans-serif;\r\n    padding:6px 0;\r\n    margin:2rem 0 1rem;\r\n    &:hover{\r\n        background:#385898;\r\n    }\r\n`;\r\n\r\nconst Login =({handleSetPage,goTodos,handleFBLogin,status})=>{\r\n    console.log('status',status);\r\n    if(status==='connected')\r\n        return <Redirect to=\"/todos\"/>\r\n    return (\r\n        <Container>\r\n            <Title>登入 Todo</Title>\r\n            <Link to='/todos'>\r\n                <LoginButton onClick={handleFBLogin}>Facebook 登入</LoginButton>\r\n            </Link>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Login;","const NotFound = () =>{\r\n    return (<h1>Not Found</h1>);\r\n}\r\n\r\nexport default NotFound;","import TodoApp from './views/TodoApp';\r\nimport Login from './views/Login';\r\nimport NotFound from './views/NotFound';\r\nimport './App.css';\r\nimport {useState,useEffect} from 'react';\r\nimport { Switch, Route, Redirect, useRouteMatch } from 'react-router-dom';\r\n\r\n//規格：判斷有無登入過，有登入過一進頁面便不用在從登入頁開始。\r\n\r\nconst App = () => {\r\n    //頁面轉換，用useState方法：\r\n    // const [currentPage,setCurrentPage]=useState('Login');\r\n    // const handleSetPage = (page) => {\r\n    //     setCurrentPage(page);\r\n    // }\r\n\r\n    //頁面轉換，用React Router方法：\r\n    const [res,setRes] = useState({});\r\n    const isAtLogin = useRouteMatch('/login');\r\n    \r\n    //載入facebook開發者工具的SDK\r\n    //SDK是整合了很多API的package\r\n    useEffect(()=>{\r\n        //下面的FB SDK載入完畢後會馬上執行fbAsyncInit\r\n        window.fbAsyncInit = function() {\r\n            //FB的SDK初始化\r\n            window.FB.init({\r\n            appId      : '1750021145156763',\r\n            cookie     : true,\r\n            xfbml      : true,\r\n            version    : 'v9.0'\r\n            });\r\n            window.FB.getLoginStatus(function(response) {\r\n                setRes(response);\r\n            });\r\n            window.FB.AppEvents.logPageView();   \r\n        };\r\n\r\n        (function(d, s, id){//在window載入FB工具\r\n            var js, fjs = d.getElementsByTagName(s)[0];\r\n            if (d.getElementById(id)) {return;}\r\n            js = d.createElement(s); js.id = id;\r\n            js.src = \"https://connect.facebook.net/en_US/sdk.js\";\r\n            fjs.parentNode.insertBefore(js, fjs);\r\n        }(document, 'script', 'facebook-jssdk'));\r\n    },[]);\r\n\r\n    const handleFBLogin = () => {\r\n        window.FB.login((res)=>{\r\n            setRes(res);\r\n            //此處將回傳：\r\n            /*\r\n            {\r\n                authResponse:\r\n                accessToken: \"EAAY3ooy03JsBAMgfrppEH2Fh9MQR8373EnWDAeTOGTCKUMcfnuHle1DYgSiglPAthtFK7Dpc7PdkZBYIp6zgdoNydyHgTEQthKB1PJkorFUnPIZChTcrtiZB4heTgTyEjZAqJlO4m2loA3Sx7VKGDnZBp4qZAVkAYouwKTwuaxL7ZCqFs7r5NA2IZC7hPeVLZBsvC9cYvaWeVkAZDZD\"\r\n                data_access_expiration_time: 1620223867\r\n                expiresIn: 6533\r\n                graphDomain: \"facebook\"\r\n                signedRequest: \"TxNLW77uMPtmQoq8Sn_Bkrs4fovaXk3XCABF5RYUT6I.eyJ1c2VyX2lkIjoiMTAxNTg5NjgxNzUxMTg2MjAiLCJjb2RlIjoiQVFBNmZwV01MTU9Lcm55aS1jYjJFS0p1YlpsY0FBS3VLWVZWU212b3lmOFlVX19oV1JXMEVDSVN3M3ctVUdrb1N1UW41SXNUODVJMWJKSzlPZnNMc3NxdmQ2dkF0Z3l6bzk0UlpSelJjRk5ZNFpUWjBSWnZ5VmVwSWpudDdMMWI2STFQVVdGX0lhb3dvRWhrcVNJSEFtU2M5U245WFYxaE1paTF6SnRUNWc0a1hDY0xrRWNIUm42LWxnZENBWkhEU2ZHNXVpeTFTLXVsbEJ4XzlzX3Q1UjhKbGxXNDR5LVY5b0RwZWFfX3NFM1R3cDMxbm5EWXJzalluZkE5RXFsZURzMTItbng5MW9rME5pT0JpRTNsdHZqNUs0V015ZFpWTTBsSXRhaXNjY0ZfaWplSmhNM3NueHhQUmVVclQ5aDVJbmZIeGgwWUNNQUp3aDF1YTRWOXYtcUwiLCJhbGdvcml0aG0iOiJITUFDLVNIQTI1NiIsImlzc3VlZF9hdCI6MTYxMjQ0Nzg2N30\"\r\n                userID: \"10158968175118620\"\r\n                __proto__: Object\r\n                status: \"connected\"\r\n            }\r\n            status變為connected代表有連結過，重新整理下次登入依舊會是connected\r\n            */\r\n        },{scope:'public_profile,email'})\r\n        //第二個參數{scope:''}，可以設定你大頭照外，還要跟使用者要什麼資訊，如email\r\n    }\r\n\r\n    const handleFBLogout = () => {\r\n        window.FB.logout(res=>{\r\n            setRes(res);//觸發重跑一次App.js\r\n        });\r\n        //此處會印出{authResponse:null,status:\"unknown\"}\r\n    }\r\n\r\n    /*\r\n        useRouteMatch是React Router的hook，如果頁面匹配了參數內的url路徑，則會回傳一個物件，這個hook是用來協助判斷route在第幾頁。\r\n        {path: \"/login\", url: \"/login\", isExact: true, params: {…}}\r\n    */ \r\n    if(res.status !== 'connected' && !isAtLogin)//如果isAtLogin已經\r\n        return <Redirect to=\"/login\"/>;\r\n\r\n    return (\r\n        <div className = \"app\">\r\n            <Switch>\r\n                <Route path=\"/\" exact>\r\n                    {res.status !== 'connected'?<Redirect to=\"/todos\"/>:<Redirect to=\"/login\"/>}\r\n                </Route>\r\n                <Route path='/todos'>\r\n                    <TodoApp handleFBLogout={handleFBLogout}/>\r\n                </Route>\r\n                <Route path='/login'>\r\n                    <Login handleFBLogin={handleFBLogin} status = {res.status}/>\r\n                </Route>\r\n                <Route path='*' component={NotFound}/>\r\n            </Switch>\r\n            {/* \r\n                1. path=\"/\"代表在根目錄\r\n                2. exact屬性:路徑需要完全符合才會導到該頁面，在這裡是isLogin是true才會執行 \r\n                3.path屬性：比對url路徑\r\n                4.component屬性：url吻合後要前往哪個component \r\n                參考網址：https://ithelp.ithome.com.tw/articles/10243368?sc=iThomeR\r\n            */}\r\n        </div>\r\n    )\r\n}\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './todoList/App';//react component\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render( \n    <Router>\n        <App />\n    </Router>\n,document.getElementById('root'));\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}